import requests
from bs4 import BeautifulSoup


YELP_API_KEY = "your_yelp_api_key"
OPENWEATHER_API_KEY = "e244ecc53b14661aff8120fbbc4edcca"
GOOGLE_MAPS_API_KEY = "your_google_maps_api_key"


def get_restaurant_details(yelp_url):
    """Scrape restaurant details from Yelp."""
    response = requests.get(yelp_url)
    soup = BeautifulSoup(response.content, 'html.parser')
    
    name = soup.find("h1").text.strip()
    address = soup.find("address").text.strip() if soup.find("address") else "N/A"
    timings = soup.find("table", class_="hours-table").text.strip() if soup.find("table", class_="hours-table") else "N/A"
    menu = {"Butter Chicken": 15.0, "Naan": 3.0}  # Placeholder for menu items

    return {"name": name, "address": address, "timings": timings, "menu": menu}

def find_competitors(location, term="indian food", radius=2000):
    """Find competitors using Yelp API."""
    url = "https://api.yelp.com/v3/businesses/search"
    headers = {"Authorization": f"Bearer {YELP_API_KEY}"}
    params = {"term": term, "location": location, "radius": radius, "sort_by": "rating", "limit": 5}

    response = requests.get(url, headers=headers, params=params)
    data = response.json()
    competitors = []
    for business in data.get("businesses", []):
        competitors.append({
            "name": business["name"],
            "rating": business["rating"],
            "menu": {"Butter Chicken": 12.5, "Naan": 2.0},  # Placeholder for menu
        })
    return competitors

def get_weather_data(lat, lon):
    """Fetch current weather data from OpenWeatherMap."""
    url = f"http://api.openweathermap.org/data/2.5/weather"
    params = {"lat": lat, "lon": lon, "appid": OPENWEATHER_API_KEY, "units": "imperial"}

    response = requests.get(url, params=params)
    if response.status_code == 200:
        return response.json()
    return {"error": "Failed to fetch weather data"}


def calculate_final_prices(menu, competitors_menu, weather_data, busy_time):
    """Adjust menu prices based on conditions."""
    final_prices = {}
    for item, base_price in menu.items():
        competitor_prices = [comp["menu"].get(item, base_price) for comp in competitors_menu if item in comp["menu"]]
        lowest_price = min(competitor_prices) if competitor_prices else base_price

        if (
            weather_data["main"]["temp"] < 45 or "rain" in weather_data["weather"][0]["main"].lower()
        ) and busy_time:
            final_prices[item] = round(lowest_price * 1.15, 2)  # 15% increase
        else:
            final_prices[item] = lowest_price
    return final_prices


def main():
    yelp_url = "https://www.yelp.com/biz/village-the-soul-of-india-hicksville"
    lat, lon = 40.755, -73.982  # Replace with actual coordinates

    # Step 1: Get restaurant details
    print("Fetching restaurant details...")
    restaurant_data = get_restaurant_details(yelp_url)

    # Step 2: Find competitors
    print("Finding competitors...")
    location = restaurant_data["address"]
    competitors = find_competitors(location)

    # Step 3: Fetch weather data
    print("Fetching weather data...")
    weather_data = get_weather_data(lat, lon)
    if "error" in weather_data:
        print(weather_data["error"])
        return

    # Step 4: Get busy time (placeholder)
    busy_time = True  # Replace with live data from Google Maps

    # Step 5: Calculate prices
    print("Calculating final prices...")
    final_prices = calculate_final_prices(restaurant_data["menu"], competitors, weather_data, busy_time)
    
    print("\n--- Final Prices ---")
    for item, price in final_prices.items():
        print(f"{item}: ${price}")

if __name__ == "__main__":
    main()
